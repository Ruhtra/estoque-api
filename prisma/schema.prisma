// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum OperationHistory {
  increase
  decrease
}

model history {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  amount    Float
  price     Float
  operation OperationHistory

  stock   Stock  @relation(fields: [stockId], references: [id])
  stockId String @db.ObjectId

  @@map("historys")
}

model Stock {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  amount Float

  history history[]
  Product Product[]

  @@map("stocks")
}

model Product {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  // price  Float
  // amount Int

  Item    Ingredient[]
  Stock   Stock        @relation(fields: [stockId], references: [id])
  stockId String       @db.ObjectId

  @@map("products")
}

model Ingredient {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  quantity Float

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId

  Recipe   Recipe? @relation(fields: [recipeId], references: [id])
  recipeId String? @db.ObjectId

  @@map("ingredients")
}

model Recipe {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  ingredients Ingredient[]

  @@map("recipes")
}
